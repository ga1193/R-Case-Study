all_trips_v2 <- all_trips[!(all_trips$ride_length < 0 |all_trips_v2$ride_length == 0),]
# Next, i combined all of my monthly data into one data frame
# We get a 786,420 x 7 dataframe that contains bike rental data from May 2022 to April 2023
# Everything except the day_of_week column is a character, will need to adjust columns to correct data types for analysis
all_trips <- bind_rows(a22_05, a22_06 ,a22_07 ,a22_08 ,a22_09 ,a22_10 ,a22_11, a22_12, a23_01, a23_02, a23_03, a23_04)
all_trips$ride_length <- chron(times=all_trips_v2$ride_length) # this converts our ride_length data from character to time (numeric) so we can perform our calculations
# Next, i combined all of my monthly data into one data frame
# We get a 786,420 x 7 dataframe that contains bike rental data from May 2022 to April 2023
# Everything except the day_of_week column is a character, will need to adjust columns to correct data types for analysis
all_trips <- bind_rows(a22_05, a22_06 ,a22_07 ,a22_08 ,a22_09 ,a22_10 ,a22_11, a22_12, a23_01, a23_02, a23_03, a23_04)
all_trips_v2 <- all_trips[!(all_trips$ride_length < 0 |all_trips_v2$ride_length == 0),]
View(all_trips_v2)
View(all_trips_v2)
str(all_trips_v2)
# Next, i combined all of my monthly data into one data frame
# We get a 786,420 x 7 dataframe that contains bike rental data from May 2022 to April 2023
# Everything except the day_of_week column is a character, will need to adjust columns to correct data types for analysis
all_trips <- bind_rows(a22_05, a22_06 ,a22_07 ,a22_08 ,a22_09 ,a22_10 ,a22_11, a22_12, a23_01, a23_02, a23_03, a23_04)
all_trips_v2 <- all_trips[!(all_trips$ride_length < 0 |all_trips_v2$ride_length == 0),]
# Next, i combined all of my monthly data into one data frame
# We get a 786,420 x 7 dataframe that contains bike rental data from May 2022 to April 2023
# Everything except the day_of_week column is a character, will need to adjust columns to correct data types for analysis
all_trips <- bind_rows(a22_05, a22_06 ,a22_07 ,a22_08 ,a22_09 ,a22_10 ,a22_11, a22_12, a23_01, a23_02, a23_03, a23_04)
all_trips$ride_length2 <- chron(times=all_trips_v2$ride_length)
all_trips$ride_length2 <- chron(times=all_trips_$ride_length)
all_trips$ride_length2 <- chron(times=all_trips$ride_length)
# Next, i combined all of my monthly data into one data frame
# We get a 786,420 x 7 dataframe that contains bike rental data from May 2022 to April 2023
# Everything except the day_of_week column is a character, will need to adjust columns to correct data types for analysis
all_trips <- bind_rows(a22_05, a22_06 ,a22_07 ,a22_08 ,a22_09 ,a22_10 ,a22_11, a22_12, a23_01, a23_02, a23_03, a23_04)
subset(all_trips, ride_length < 0)
length(subset(all_trips, ride_length < 0))
length(subset(all_trips, ride_length == 0))
# Next, i combined all of my monthly data into one data frame
# We get a 786,420 x 7 dataframe that contains bike rental data from May 2022 to April 2023
# Everything except the day_of_week column is a character, will need to adjust columns to correct data types for analysis
all_trips <- bind_rows(a22_05, a22_06 ,a22_07 ,a22_08 ,a22_09 ,a22_10 ,a22_11, a22_12, a23_01, a23_02, a23_03, a23_04)
length(subset(all_trips, ride_length < 0))
all_trips_v2 <- all_trips[!(all_trips$ride_length<0),]
all_trips_v2 <- all_trips
all_trips_v2 <- all_trips[!(all_trips$ride_length<0),]
all_trips_v2 <- all_trips
all_trips_v2 <- all_trips[!(all_trips$ride_length < 0 | all_trips$ride_length = 0),]
all_trips_v2 <- all_trips
all_trips_v2 <- all_trips[!(all_trips$ride_length < 0 | all_trips$ride_length = 0),]
all_trips_v2 <- all_trips
all_trips_v2 <- all_trips[!(all_trips$ride_length < 0 & all_trips$ride_length = 0),]
all_trips_v2 <- all_trips[!(all_trips$ride_length <= 0),]
# Next, i combined all of my monthly data into one data frame
# We get a 786,420 x 7 dataframe that contains bike rental data from May 2022 to April 2023
# Everything except the day_of_week column is a character, will need to adjust columns to correct data types for analysis
all_trips <- bind_rows(a22_05, a22_06 ,a22_07 ,a22_08 ,a22_09 ,a22_10 ,a22_11, a22_12, a23_01, a23_02, a23_03, a23_04)
all_trips2$ride_length2 <- chron(times=all_trips$ride_length) # this converts our ride_length data from character to time (numeric) so we can perform our calculations
# Next, i combined all of my monthly data into one data frame
# We get a 786,420 x 7 dataframe that contains bike rental data from May 2022 to April 2023
# Everything except the day_of_week column is a character, will need to adjust columns to correct data types for analysis
all_trips <- bind_rows(a22_05, a22_06 ,a22_07 ,a22_08 ,a22_09 ,a22_10 ,a22_11, a22_12, a23_01, a23_02, a23_03, a23_04)
all_trips2$ride_length2 <- chron(times=all_trips$ride_length) # this converts our ride_length data from character to time (numeric) so we can perform our calculations
all_trips_v2 <- na.omit(all_trips)
all_trips_v2 <- all_trips[!(all_trips$ride_length <= 0),]
# Next, i combined all of my monthly data into one data frame
# We get a 786,420 x 7 dataframe that contains bike rental data from May 2022 to April 2023
# Everything except the day_of_week column is a character, will need to adjust columns to correct data types for analysis
all_trips <- bind_rows(a22_05, a22_06 ,a22_07 ,a22_08 ,a22_09 ,a22_10 ,a22_11, a22_12, a23_01, a23_02, a23_03, a23_04)
all_trips2$ride_length2 <- chron(times=all_trips$ride_length) # this converts our ride_length data from character to time (numeric) so we can perform our calculations
# Next, i combined all of my monthly data into one data frame
# We get a 786,420 x 7 dataframe that contains bike rental data from May 2022 to April 2023
# Everything except the day_of_week column is a character, will need to adjust columns to correct data types for analysis
all_trips <- bind_rows(a22_05, a22_06 ,a22_07 ,a22_08 ,a22_09 ,a22_10 ,a22_11, a22_12, a23_01, a23_02, a23_03, a23_04)
all_trips$ride_length2 <- chron(times=all_trips$ride_length) # this converts our ride_length data from character to time (numeric) so we can perform our calculations
# Next, i combined all of my monthly data into one data frame
# We get a 786,420 x 7 dataframe that contains bike rental data from May 2022 to April 2023
# Everything except the day_of_week column is a character, will need to adjust columns to correct data types for analysis
all_trips <- bind_rows(a22_05, a22_06 ,a22_07 ,a22_08 ,a22_09 ,a22_10 ,a22_11, a22_12, a23_01, a23_02, a23_03, a23_04)
all_trips$ride_length2 <- chron(times=all_trips$ride_length) # this converts our ride_length data from character to time (numeric) so we can perform our calculations
# Next, i combined all of my monthly data into one data frame
# We get a 786,420 x 7 dataframe that contains bike rental data from May 2022 to April 2023
# Everything except the day_of_week column is a character, will need to adjust columns to correct data types for analysis
all_trips <- bind_rows(a22_05, a22_06 ,a22_07 ,a22_08 ,a22_09 ,a22_10 ,a22_11, a22_12, a23_01, a23_02, a23_03, a23_04)
all_trips$ride_length2 <- chron(times=all_trips$ride_length) # this converts our ride_length data from character to time (numeric) so we can perform our calculations
View(all_trips)
View(all_trips)
all_trips_v2 <- all_trips
all_trips_v2 <- na.omit(all_trips)
all_trips_v2 <- all_trips[!(all_trips$ride_length <= 0),]
# Next, i combined all of my monthly data into one data frame
# We get a 786,420 x 7 dataframe that contains bike rental data from May 2022 to April 2023
# Everything except the day_of_week column is a character, will need to adjust columns to correct data types for analysis
all_trips <- bind_rows(a22_05, a22_06 ,a22_07 ,a22_08 ,a22_09 ,a22_10 ,a22_11, a22_12, a23_01, a23_02, a23_03, a23_04)
all_trips$ride_length2 <- chron(times=all_trips$ride_length) # this converts our ride_length data from character to time (numeric) so we can perform our calculations
# Next, i combined all of my monthly data into one data frame
# We get a 786,420 x 7 dataframe that contains bike rental data from May 2022 to April 2023
# Everything except the day_of_week column is a character, will need to adjust columns to correct data types for analysis
all_trips <- bind_rows(a22_05, a22_06 ,a22_07 ,a22_08 ,a22_09 ,a22_10 ,a22_11, a22_12, a23_01, a23_02, a23_03, a23_04)
# Next, i combined all of my monthly data into one data frame
# We get a 786,420 x 7 dataframe that contains bike rental data from May 2022 to April 2023
# Everything except the day_of_week column is a character, will need to adjust columns to correct data types for analysis
all_trips <- bind_rows(a22_05, a22_06 ,a22_07 ,a22_08 ,a22_09 ,a22_10 ,a22_11, a22_12, a23_01, a23_02, a23_03, a23_04)
all_trips$ride_length2 <- chron(times=all_trips$ride_length) # this converts our ride_length data from character to time (numeric) so we can perform our calculations
# Next, i combined all of my monthly data into one data frame
# We get a 786,420 x 7 dataframe that contains bike rental data from May 2022 to April 2023
# Everything except the day_of_week column is a character, will need to adjust columns to correct data types for analysis
all_trips <- bind_rows(a22_05, a22_06 ,a22_07 ,a22_08 ,a22_09 ,a22_10 ,a22_11, a22_12, a23_01, a23_02, a23_03, a23_04)
all_trips$ride_length2 <- chron(times=all_trips$ride_length) # this converts our ride_length data from character to time (numeric) so we can perform our calculations
length(subset(all_trips, ride_length < 0))
length(subset(all_trips, ride_length = 0))
# Next, i combined all of my monthly data into one data frame
# We get a 786,420 x 7 dataframe that contains bike rental data from May 2022 to April 2023
# Everything except the day_of_week column is a character, will need to adjust columns to correct data types for analysis
all_trips <- bind_rows(a22_05, a22_06 ,a22_07 ,a22_08 ,a22_09 ,a22_10 ,a22_11, a22_12, a23_01, a23_02, a23_03, a23_04)
all_trips$ride_length2 <- chron(times=all_trips$ride_length) # this converts our ride_length data from character to time (numeric) so we can perform our calculations
length(subset(all_trips, ride_length2 < 0))
length(subset(all_trips, ride_length2 = 0))
length(subset(all_trips, ride_length2 == 0))
all_trips_v2 <- all_trips
all_trips_v2 <- na.omit(all_trips)
all_trips_v2 <- all_trips[!(all_trips$ride_length2 <= 0),]
str(all_trips_v2)
summary(all_trips_v2$ride_length2) # avg ride time: 00:14:24
all_trips_v2 <- all_trips
all_trips_v2 <- na.omit(all_trips_v2)
summary(all_trips_v2$ride_length2)
all_trips_v2 <- all_trips
all_trips_v2 <- na.omit(all_trips_v2)
all_trips_v2 <- all_trips[!(all_trips$ride_length2 <= 0),]
# Now that our data is all clean and processed, we can start calculating our summary statistics
summary(all_trips_v2$ride_length2) # avg ride time: 00:14:24
which(is.na(all_trips_v2), arr.ind=TRUE)
all_trips_v2[158529,1]
all_trips_v2[158529]
all_trips_v2[158529,]
# Next, i combined all of my monthly data into one data frame
# We get a 786,420 x 7 dataframe that contains bike rental data from May 2022 to April 2023
# Everything except the day_of_week column is a character, will need to adjust columns to correct data types for analysis
all_trips <- bind_rows(a22_05, a22_06 ,a22_07 ,a22_08 ,a22_09 ,a22_10 ,a22_11, a22_12, a23_01, a23_02, a23_03, a23_04)
na.omit(all_trips)
# Next, i combined all of my monthly data into one data frame
# We get a 786,420 x 7 dataframe that contains bike rental data from May 2022 to April 2023
# Everything except the day_of_week column is a character, will need to adjust columns to correct data types for analysis
all_trips <- bind_rows(a22_05, a22_06 ,a22_07 ,a22_08 ,a22_09 ,a22_10 ,a22_11, a22_12, a23_01, a23_02, a23_03, a23_04)
all_trips <- na.omit(all_trips)
# Next, i combined all of my monthly data into one data frame
# We get a 786,420 x 7 dataframe that contains bike rental data from May 2022 to April 2023
# Everything except the day_of_week column is a character, will need to adjust columns to correct data types for analysis
all_trips <- na.omit(bind_rows(a22_05, a22_06 ,a22_07 ,a22_08 ,a22_09 ,a22_10 ,a22_11, a22_12, a23_01, a23_02, a23_03, a23_04))
# Next, i combined all of my monthly data into one data frame
# We get a 786,420 x 7 dataframe that contains bike rental data from May 2022 to April 2023
# Everything except the day_of_week column is a character, will need to adjust columns to correct data types for analysis
all_trips <- na.omit(bind_rows(a22_05, a22_06 ,a22_07 ,a22_08 ,a22_09 ,a22_10 ,a22_11, a22_12, a23_01, a23_02, a23_03, a23_04))
which(is.na(all_trips_v2), arr.ind=TRUE)
# Next, i combined all of my monthly data into one data frame
# We get a 786,420 x 7 dataframe that contains bike rental data from May 2022 to April 2023
# Everything except the day_of_week column is a character, will need to adjust columns to correct data types for analysis
all_trips <- bind_rows(a22_05, a22_06 ,a22_07 ,a22_08 ,a22_09 ,a22_10 ,a22_11, a22_12, a23_01, a23_02, a23_03, a23_04)
all_tripsNA <- na.omit(all_trips)
all_tripsNA$ride_length2 <- chron(times=all_trips$ride_length) # this converts our ride_length data from character to time (numeric) so we can perform our calculations
# Next, i combined all of my monthly data into one data frame
# We get a 786,420 x 7 dataframe that contains bike rental data from May 2022 to April 2023
# Everything except the day_of_week column is a character, will need to adjust columns to correct data types for analysis
all_trips <- bind_rows(a22_05, a22_06 ,a22_07 ,a22_08 ,a22_09 ,a22_10 ,a22_11, a22_12, a23_01, a23_02, a23_03, a23_04)
all_tripsNA <- na.omit(all_trips)
all_tripsNA$ride_length2 <- chron(times=all_tripsNA$ride_length) # this converts our ride_length data from character to time (numeric) so we can perform our calculations
which(is.na(all_tripsNA), arr.ind=TRUE)
# Next, i combined all of my monthly data into one data frame
# We get a 786,420 x 7 dataframe that contains bike rental data from May 2022 to April 2023
# Everything except the day_of_week column is a character, will need to adjust columns to correct data types for analysis
all_trips <- bind_rows(a22_05, a22_06 ,a22_07 ,a22_08 ,a22_09 ,a22_10 ,a22_11, a22_12, a23_01, a23_02, a23_03, a23_04)
all_tripsNA <- na.omit(all_trips)
View(all_tripsNA)
# Next, i combined all of my monthly data into one data frame
# We get a 786,420 x 7 dataframe that contains bike rental data from May 2022 to April 2023
# Everything except the day_of_week column is a character, will need to adjust columns to correct data types for analysis
all_trips <- bind_rows(a22_05, a22_06 ,a22_07 ,a22_08 ,a22_09 ,a22_10 ,a22_11, a22_12, a23_01, a23_02, a23_03, a23_04)
all_tripsNA <- na.omit(all_trips)
a22_05 = read.csv("Clean_Data/202205-divvy-tripdata.csv")
a22_06 = read.csv("Clean_Data/202206-divvy-tripdata.csv")
a22_07 = read.csv("Clean_Data/202207-divvy-tripdata.csv")
a22_08 = read.csv("Clean_Data/202208-divvy-tripdata.csv")
a22_09 = read.csv("Clean_Data/202209-divvy-tripdata.csv")
a22_10 = read.csv("Clean_Data/202210-divvy-tripdata.csv")
a22_11 = read.csv("Clean_Data/202211-divvy-tripdata.csv")
a22_12 = read.csv("Clean_Data/202212-divvy-tripdata.csv")
a23_01 = read.csv("Clean_Data/202301-divvy-tripdata.csv")
a23_02 = read.csv("Clean_Data/202302-divvy-tripdata.csv")
a23_03 = read.csv("Clean_Data/202303-divvy-tripdata.csv")
a23_04 = read.csv("Clean_Data/202304-divvy-tripdata.csv")
# Next, i combined all of my monthly data into one data frame
# We get a 786,420 x 7 dataframe that contains bike rental data from May 2022 to April 2023
# Everything except the day_of_week column is a character, will need to adjust columns to correct data types for analysis
all_trips <- bind_rows(a22_05, a22_06 ,a22_07 ,a22_08 ,a22_09 ,a22_10 ,a22_11, a22_12, a23_01, a23_02, a23_03, a23_04)
all_tripsNA <- na.omit(all_trips)
# Next, i combined all of my monthly data into one data frame
# We get a 786,420 x 7 dataframe that contains bike rental data from May 2022 to April 2023
# Everything except the day_of_week column is a character, will need to adjust columns to correct data types for analysis
all_trips <- bind_rows(a22_05, a22_06 ,a22_07 ,a22_08 ,a22_09 ,a22_10 ,a22_11, a22_12, a23_01, a23_02, a23_03, a23_04)
# Next, i combined all of my monthly data into one data frame
# We get a 786,420 x 7 dataframe that contains bike rental data from May 2022 to April 2023
# Everything except the day_of_week column is a character, will need to adjust columns to correct data types for analysis
all_trips <- bind_rows(a22_05, a22_06 ,a22_07 ,a22_08 ,a22_09 ,a22_10 ,a22_11, a22_12, a23_01, a23_02, a23_03, a23_04)
all_trips$ride_length2 <- chron(times=all_trips$ride_length) # this converts our ride_length data from character to time (numeric) so we can perform our calculations
# Next, i combined all of my monthly data into one data frame
# We get a 786,420 x 7 dataframe that contains bike rental data from May 2022 to April 2023
# Everything except the day_of_week column is a character, will need to adjust columns to correct data types for analysis
all_trips <- bind_rows(a22_05, a22_06 ,a22_07 ,a22_08 ,a22_09 ,a22_10 ,a22_11, a22_12, a23_01, a23_02, a23_03, a23_04)
all_trips$ride_length2 <- chron(times=all_trips$ride_length) # this converts our ride_length data from character to time (numeric) so we can perform our calculations
all_tripsNA <- na.omit(all_trips)
View(all_tripsNA)
all_trips_v2 <- all_tripsNA
all_trips_v2 <- all_trips[!(all_trips$ride_length2 <= 0),]
# Now that our data is all clean and processed, we can start calculating our summary statistics
summary(all_trips_v2$ride_length2) # avg ride time: 00:14:24
which(is.na(all_trips_v2))
# Next, i combined all of my monthly data into one data frame
# We get a 786,420 x 7 dataframe that contains bike rental data from May 2022 to April 2023
# Everything except the day_of_week column is a character, will need to adjust columns to correct data types for analysis
all_trips <- bind_rows(a22_05, a22_06 ,a22_07 ,a22_08 ,a22_09 ,a22_10 ,a22_11, a22_12, a23_01, a23_02, a23_03, a23_04)
all_trips$ride_length2 <- chron(times=all_trips$ride_length) # this converts our ride_length data from character to time (numeric) so we can perform our calculations
# Next, i combined all of my monthly data into one data frame
# We get a 786,420 x 7 dataframe that contains bike rental data from May 2022 to April 2023
# Everything except the day_of_week column is a character, will need to adjust columns to correct data types for analysis
all_trips <- bind_rows(a22_05, a22_06 ,a22_07 ,a22_08 ,a22_09 ,a22_10 ,a22_11, a22_12, a23_01, a23_02, a23_03, a23_04)
which(is.na(all_trips))
# Next, i combined all of my monthly data into one data frame
# We get a 786,420 x 7 dataframe that contains bike rental data from May 2022 to April 2023
# Everything except the day_of_week column is a character, will need to adjust columns to correct data types for analysis
all_trips <- bind_rows(a22_05, a22_06 ,a22_07 ,a22_08 ,a22_09 ,a22_10 ,a22_11, a22_12, a23_01, a23_02, a23_03, a23_04)
which(all_trips$ride_length <= 0)
all_trips$ride_length[158538]
all_trips[158538]
all_trips[158538,]
all_trips2 <- subset[which(all_trips$ride_length <= 0)]
all_trips2 <- subset[!(all_trips$ride_length <= 0)]
all_trips2 <- all_trips[!(all_trips$ride_length <= 0)]
all_trips2 <- all_trips[!(all_trips$ride_length <= 0),]
# Next, i combined all of my monthly data into one data frame
# We get a 786,420 x 7 dataframe that contains bike rental data from May 2022 to April 2023
# Everything except the day_of_week column is a character, will need to adjust columns to correct data types for analysis
all_trips <- bind_rows(a22_05, a22_06 ,a22_07 ,a22_08 ,a22_09 ,a22_10 ,a22_11, a22_12, a23_01, a23_02, a23_03, a23_04)
all_trips2 <- all_trips[!(all_trips$ride_length <= 0),]
which(all_trips2$ride_length <= 0)
all_trips$ride_length2 <- chron(times=all_trips$ride_length) # this converts our ride_length data from character to time (numeric) so we can perform our calculations
# Next, i combined all of my monthly data into one data frame
# We get a 786,420 x 7 dataframe that contains bike rental data from May 2022 to April 2023
# Everything except the day_of_week column is a character, will need to adjust columns to correct data types for analysis
all_trips <- bind_rows(a22_05, a22_06 ,a22_07 ,a22_08 ,a22_09 ,a22_10 ,a22_11, a22_12, a23_01, a23_02, a23_03, a23_04)
all_trips2 <- all_trips[!(all_trips$ride_length <= 0),]
which(all_trips2$ride_length <= 0)
all_trips2$ride_length2 <- chron(times=all_trips$ride_length) # this converts our ride_length data from character to time (numeric) so we can perform our calculations
# Next, i combined all of my monthly data into one data frame
# We get a 786,420 x 7 dataframe that contains bike rental data from May 2022 to April 2023
# Everything except the day_of_week column is a character, will need to adjust columns to correct data types for analysis
all_trips <- bind_rows(a22_05, a22_06 ,a22_07 ,a22_08 ,a22_09 ,a22_10 ,a22_11, a22_12, a23_01, a23_02, a23_03, a23_04)
all_trips2 <- all_trips[!(all_trips$ride_length <= 0),]
which(all_trips2$ride_length <= 0)
all_trips2$ride_length2 <- chron(times=all_trip2s$ride_length) # this converts our ride_length data from character to time (numeric) so we can perform our calculations
all_trips2$ride_length2 <- chron(times=all_trips2$ride_length) # this converts our ride_length data from character to time (numeric) so we can perform our calculations
which(is.na(all_trips2))
# Next, i combined all of my monthly data into one data frame
# We get a 786,420 x 7 dataframe that contains bike rental data from May 2022 to April 2023
# Everything except the day_of_week column is a character, will need to adjust columns to correct data types for analysis
all_trips <- bind_rows(a22_05, a22_06 ,a22_07 ,a22_08 ,a22_09 ,a22_10 ,a22_11, a22_12, a23_01, a23_02, a23_03, a23_04)
all_trips2 <- all_trips[!(all_trips$ride_length <= 0),]
which(all_trips2$ride_length <= 0)
all_trips2$ride_length2 <- chron(times=all_trips2$ride_length) # this converts our ride_length data from character to time (numeric) so we can perform our calculations
which(is.na(all_trips2))
View(all_trips_v2)
View(all_trips_v2)
View(all_trips2)
View(all_trips2)
str(all_trips2)
# Next, i combined all of my monthly data into one data frame
# We get a 786,420 x 7 dataframe that contains bike rental data from May 2022 to April 2023
# Everything except the day_of_week column is a character, will need to adjust columns to correct data types for analysis
all_trips <- bind_rows(a22_05, a22_06 ,a22_07 ,a22_08 ,a22_09 ,a22_10 ,a22_11, a22_12, a23_01, a23_02, a23_03, a23_04)
all_trips2 <- all_trips[!(all_trips$ride_length <= 0),]
which(all_trips2$ride_length <= 0)
all_trips2$ride_length2 <- chron(times=all_trips2$ride_length) # this converts our ride_length data from character to time (numeric) so we can perform our calculations
all_trips_v2 <- all_trips2
#Next, we're going to want to move create individual columns for day, month, year, etc. (need to split date and time column)
all_trips_v2[c('date', 'time')] <- str_split_fixed(all_trips_v2$started_at, ' ', 2) # this separates date and time, now we can separate date
all_trips_v2$date <- as.Date(all_trips_v2$date, "%m/%d/%y") #convert character string to date data type
all_trips_v2$month <- format(as.Date(all_trips_v2$date), "%m")
all_trips_v2$day <- format(as.Date(all_trips_v2$date), "%d")
all_trips_v2$year <- format(as.Date(all_trips_v2$date), "%y")
# Next, i combined all of my monthly data into one data frame
# We get a 786,420 x 7 dataframe that contains bike rental data from May 2022 to April 2023
# Everything except the day_of_week column is a character, will need to adjust columns to correct data types for analysis
all_trips <- bind_rows(a22_05, a22_06 ,a22_07 ,a22_08 ,a22_09 ,a22_10 ,a22_11, a22_12, a23_01, a23_02, a23_03, a23_04)
all_trips_v2 <- all_trips[!(all_trips$ride_length <= 0),]
which(all_trips_v2$ride_length <= 0)
all_trips_v2$ride_length2 <- chron(times=all_trips_v2$ride_length) # this converts our ride_length data from character to time (numeric) so we can perform our calculations
which(is.na(all_trips_v2))
colnames(all_trips)
dim(all_trips)
str(all_trips)
View(all_trips_v2)
View(all_trips_v2)
str(all_trips_v2)
colnames(all_trips_v2)
dim(all_trips_v2)
str(all_trips_v2)
# only two types of user (member or casual); three types of bikes (classic, docked, and electric)
# there are several rows with negative values; we have to remove this 'bad data'
unique(all_trips$member_casual)
unique(all_trips$rideable_type)
#Next, we're going to want to move create individual columns for day, month, year, etc. (need to split date and time column)
all_trips_v2[c('date', 'time')] <- str_split_fixed(all_trips_v2$started_at, ' ', 2) # this separates date and time, now we can separate date
all_trips_v2$date <- as.Date(all_trips_v2$date, "%m/%d/%y") #convert character string to date data type
all_trips_v2$month <- format(as.Date(all_trips_v2$date), "%m")
all_trips_v2$day <- format(as.Date(all_trips_v2$date), "%d")
all_trips_v2$year <- format(as.Date(all_trips_v2$date), "%y")
str(all_trips_v2)
# Now that our data is all clean and processed, we can start calculating our summary statistics
summary(all_trips_v2$ride_length2) # avg ride time: 00:14:24
# Next, i combined all of my monthly data into one data frame
# We get a 786,420 x 7 dataframe that contains bike rental data from May 2022 to April 2023
# Everything except the day_of_week column is a character, will need to adjust columns to correct data types for analysis
all_trips <- bind_rows(a22_05, a22_06 ,a22_07 ,a22_08 ,a22_09 ,a22_10 ,a22_11, a22_12, a23_01, a23_02, a23_03, a23_04)
all_trips_v2 <- all_trips[!(all_trips$ride_length <= 0),]
which(all_trips_v2$ride_length <= 0) # check there are no NAs
which(all_trips_v2$ride_length < 0) # check there are no NAs
which(all_trips_v2$ride_length == 0) # check there are no NAs
a22_05 = read.csv("Clean_Data/202205-divvy-tripdata.csv")
a22_06 = read.csv("Clean_Data/202206-divvy-tripdata.csv")
a22_07 = read.csv("Clean_Data/202207-divvy-tripdata.csv")
a22_08 = read.csv("Clean_Data/202208-divvy-tripdata.csv")
a22_09 = read.csv("Clean_Data/202209-divvy-tripdata.csv")
a22_10 = read.csv("Clean_Data/202210-divvy-tripdata.csv")
a22_11 = read.csv("Clean_Data/202211-divvy-tripdata.csv")
a22_12 = read.csv("Clean_Data/202212-divvy-tripdata.csv")
a23_01 = read.csv("Clean_Data/202301-divvy-tripdata.csv")
a23_02 = read.csv("Clean_Data/202302-divvy-tripdata.csv")
a23_03 = read.csv("Clean_Data/202303-divvy-tripdata.csv")
a23_04 = read.csv("Clean_Data/202304-divvy-tripdata.csv")
# Next, i combined all of my monthly data into one data frame
# We get a 786,420 x 7 dataframe that contains bike rental data from May 2022 to April 2023
# Everything except the day_of_week column is a character, will need to adjust columns to correct data types for analysis
all_trips <- bind_rows(a22_05, a22_06 ,a22_07 ,a22_08 ,a22_09 ,a22_10 ,a22_11, a22_12, a23_01, a23_02, a23_03, a23_04)
all_trips_v2 <- all_trips[!(all_trips$ride_length <= 0),]
which(all_trips_v2$ride_length <= 0) # check there are no NAs
all_trips_v2$ride_length2 <- chron(times=all_trips_v2$ride_length) # this converts our ride_length data from character to time (numeric) so we can perform our calculations
which(is.na(all_trips_v2)) #check there are no NAs after converting data type
str(all_trips_v2)
#Next, we're going to want to move create individual columns for day, month, year, etc. (need to split date and time column)
all_trips_v2[c('date', 'time')] <- str_split_fixed(all_trips_v2$started_at, ' ', 2) # this separates date and time, now we can separate date
str(all_trips_v2)
which(is.na(all_trips_v2)) #check there are no NAs after converting data type
all_trips_v2$date <- as.Date(all_trips_v2$date, "%m/%d/%y") #convert character string to date data type
all_trips_v2$month <- format(as.Date(all_trips_v2$date), "%m")
all_trips_v2$day <- format(as.Date(all_trips_v2$date), "%d")
all_trips_v2$year <- format(as.Date(all_trips_v2$date), "%y")
str(all_trips_v2)
# Now that our data is all clean and processed, we can start calculating our summary statistics
summary(all_trips_v2$ride_length2) # avg ride time: 00:14:24
which(all_trips_v2$ride_length <= 0)
which(all_trips_v2$ride_length2 <= 0)
all_trips_v2[5516,]
which(all_trips_v2$ride_length2 <= 0)
# Next, i combined all of my monthly data into one data frame
# We get a 786,420 x 7 dataframe that contains bike rental data from May 2022 to April 2023
# Everything except the day_of_week column is a character, will need to adjust columns to correct data types for analysis
all_trips <- bind_rows(a22_05, a22_06 ,a22_07 ,a22_08 ,a22_09 ,a22_10 ,a22_11, a22_12, a23_01, a23_02, a23_03, a23_04)
all_trips_v2 <- all_trips[!(all_trips$ride_length <= 0),]
which(all_trips_v2$ride_length <= 0) # check there are no NAs
all_trips_v2$ride_length2 <- chron(times=all_trips_v2$ride_length) # this converts our ride_length data from character to time (numeric) so we can perform our calculations
which(is.na(all_trips_v2)) #check there are no NAs after converting data type
which(all_trips_v2$ride_length2 <= 0)
all_trips_v2[5516,]
all_trips[5516,]
all_trips[!(all_trips$ride_length <= 0),]
# Next, i combined all of my monthly data into one data frame
# We get a 786,420 x 7 dataframe that contains bike rental data from May 2022 to April 2023
# Everything except the day_of_week column is a character, will need to adjust columns to correct data types for analysis
all_trips <- bind_rows(a22_05, a22_06 ,a22_07 ,a22_08 ,a22_09 ,a22_10 ,a22_11, a22_12, a23_01, a23_02, a23_03, a23_04)
all_trips_v2 <- all_trips[!(all_trips$ride_length <= 0),]
# Next, i combined all of my monthly data into one data frame
# We get a 786,420 x 7 dataframe that contains bike rental data from May 2022 to April 2023
# Everything except the day_of_week column is a character, will need to adjust columns to correct data types for analysis
all_trips <- bind_rows(a22_05, a22_06 ,a22_07 ,a22_08 ,a22_09 ,a22_10 ,a22_11, a22_12, a23_01, a23_02, a23_03, a23_04)
all_trips_v2 <- all_trips[!(all_trips$ride_length <= 0),]
which(all_trips_v2$ride_length <= 0) # check there are no NAs
all_trips_v2$ride_length2 <- chron(times=all_trips_v2$ride_length) # this converts our ride_length data from character to time (numeric) so we can perform our calculations
which(is.na(all_trips_v2)) #check there are no NAs after converting data type
which(all_trips_v2$ride_length2 <= 0)
# Next, i combined all of my monthly data into one data frame
# We get a 786,420 x 7 dataframe that contains bike rental data from May 2022 to April 2023
# Everything except the day_of_week column is a character, will need to adjust columns to correct data types for analysis
all_trips <- bind_rows(a22_05, a22_06 ,a22_07 ,a22_08 ,a22_09 ,a22_10 ,a22_11, a22_12, a23_01, a23_02, a23_03, a23_04)
all_trips_v2 <- all_trips[!(all_trips$ride_length <= 0),]
which(all_trips_v2$ride_length <= 0) # check there are no NAs
View(all_trips_v2)
# Next, i combined all of my monthly data into one data frame
# We get a 786,420 x 7 dataframe that contains bike rental data from May 2022 to April 2023
# Everything except the day_of_week column is a character, will need to adjust columns to correct data types for analysis
all_trips <- bind_rows(a22_05, a22_06 ,a22_07 ,a22_08 ,a22_09 ,a22_10 ,a22_11, a22_12, a23_01, a23_02, a23_03, a23_04)
all_trips_v2 <- all_trips[!(all_trips$ride_length <= 0),]
which(all_trips_v2$ride_length <= 0) # check there are no NAs
which(is.na(all_trips_v2$ride_length)) # check there are no NAs
# Next, i combined all of my monthly data into one data frame
# We get a 786,420 x 7 dataframe that contains bike rental data from May 2022 to April 2023
# Everything except the day_of_week column is a character, will need to adjust columns to correct data types for analysis
all_trips <- bind_rows(a22_05, a22_06 ,a22_07 ,a22_08 ,a22_09 ,a22_10 ,a22_11, a22_12, a23_01, a23_02, a23_03, a23_04)
all_trips_v2 <- all_trips[!(all_trips$ride_length <= 0),]
which(is.na(all_trips_v2$ride_length)) # check there are no NAs
all_trips_v2$ride_length2 <- chron(times=all_trips_v2$ride_length) # this converts our ride_length data from character to time (numeric) so we can perform our calculations
which(is.na(all_trips_v2)) #check there are no NAs after converting data type
which(all_trips_v2$ride_length2 <= 0)
all_trips_v3 <- all_trips_v2[(which(all_trips_v2$ride_length2 <= 0))]
all_trips_v3 <- all_trips_v2[(which(all_trips_v2$ride_length2 <= 0),)]
View(a23_03)
all_trips_v3 <- all_trips_v2[(which(all_trips_v2$ride_length2 <= 0),)]
all_trips_v3 <- all_trips_v2[(which(all_trips_v2$ride_length2 <= 0)),]
all_trips_v3 <- all_trips_v2[!(which(all_trips_v2$ride_length2 <= 0)),]
colnames(all_trips_v2)
all_trips_v3 <- all_trips_v2[(which(all_trips_v2$ride_length2 <= 0))]
which(is.na(all_trips_v2)) #check there are no NAs after converting data type
which(is.na(all_trips_v2)) #check there are no NAs after converting data type
all_trips_v3 <- all_trips_v2[(which(all_trips_v2$ride_length2 <= 0))]
which(all_trips_v2$ride_length2 <= 0)
all_trips_v3 <- all_trips_v2[-(which(all_trips_v2$ride_length2 <= 0))]
# Next, i combined all of my monthly data into one data frame
# We get a 786,420 x 7 dataframe that contains bike rental data from May 2022 to April 2023
# Everything except the day_of_week column is a character, will need to adjust columns to correct data types for analysis
all_trips <- bind_rows(a22_05, a22_06 ,a22_07 ,a22_08 ,a22_09 ,a22_10 ,a22_11, a22_12, a23_01, a23_02, a23_03, a23_04)
all_trips_v2 <- all_trips[!(all_trips$ride_length <= 0),]
which(is.na(all_trips_v2$ride_length)) # check there are no NAs
all_trips_v2$ride_length2 <- chron(times=all_trips_v2$ride_length) # this converts our ride_length data from character to time (numeric) so we can perform our calculations
which(is.na(all_trips_v2)) #check there are no NAs after converting data type
which(all_trips_v2$ride_length2 <= 0)
all_trips_v3 <- all_trips_v2[-(which(all_trips_v2$ride_length2 <= 0))]
which(all_trips_v3$ride_length2 <= 0)
a <- which(all_trips_v2$ride_length2 <= 0)
all_trips_v3 <- all_trips_v2[-(all_trips_v2[a])]
all_trips_v3 <- all_trips_v2[-(all_trips_v2[a],)]
all_trips_v3 <- all_trips_v2[-(all_trips_v2[a]),]
all_trips_v3 <- all_trips_v2[-(all_trips_v2[a,])]
all_trips_v3 <- all_trips_v2[-a]
# Next, i combined all of my monthly data into one data frame
# We get a 786,420 x 7 dataframe that contains bike rental data from May 2022 to April 2023
# Everything except the day_of_week column is a character, will need to adjust columns to correct data types for analysis
all_trips <- bind_rows(a22_05, a22_06 ,a22_07 ,a22_08 ,a22_09 ,a22_10 ,a22_11, a22_12, a23_01, a23_02, a23_03, a23_04)
all_trips_v2 <- all_trips[!(all_trips$ride_length <= 0),]
which(is.na(all_trips_v2$ride_length)) # check there are no NAs
all_trips_v2$ride_length2 <- chron(times=all_trips_v2$ride_length) # this converts our ride_length data from character to time (numeric) so we can perform our calculations
which(is.na(all_trips_v2)) #check there are no NAs after converting data type
a <- which(all_trips_v2$ride_length2 <= 0)
all_trips_v3 <- all_trips_v2[-a]
all_trips_v3 <- subset(all_trips_v2,which(all_trips_v2$ride_length2 > 0) )
all_trips_v3 <- subset(all_trips_v2, all_trips_v2 > 0 )
a22_05 = read.csv("Clean_Data/202205-divvy-tripdata.csv")
a22_06 = read.csv("Clean_Data/202206-divvy-tripdata.csv")
a22_07 = read.csv("Clean_Data/202207-divvy-tripdata.csv")
a22_08 = read.csv("Clean_Data/202208-divvy-tripdata.csv")
a22_09 = read.csv("Clean_Data/202209-divvy-tripdata.csv")
a22_10 = read.csv("Clean_Data/202210-divvy-tripdata.csv")
a22_11 = read.csv("Clean_Data/202211-divvy-tripdata.csv")
a22_12 = read.csv("Clean_Data/202212-divvy-tripdata.csv")
a23_01 = read.csv("Clean_Data/202301-divvy-tripdata.csv")
a23_02 = read.csv("Clean_Data/202302-divvy-tripdata.csv")
a23_03 = read.csv("Clean_Data/202303-divvy-tripdata.csv")
a23_04 = read.csv("Clean_Data/202304-divvy-tripdata.csv")
# Next, i combined all of my monthly data into one data frame
# We get a 786,420 x 7 dataframe that contains bike rental data from May 2022 to April 2023
# Everything except the day_of_week column is a character, will need to adjust columns to correct data types for analysis
all_trips <- bind_rows(a22_05, a22_06 ,a22_07 ,a22_08 ,a22_09 ,a22_10 ,a22_11, a22_12, a23_01, a23_02, a23_03, a23_04)
all_trips_v2 <- all_trips[!(all_trips$ride_length <= 0),]
which(is.na(all_trips_v2$ride_length)) # check there are no NAs
all_trips_v2$ride_length2 <- chron(times=all_trips_v2$ride_length) # this converts our ride_length data from character to time (numeric) so we can perform our calculations
which(is.na(all_trips_v2)) #check there are no NAs after converting data type
all_trips_v3 <- subset(all_trips_v2, all_trips_v2 > 0 )
all_trips_v3 <- subset(all_trips_v2, all_trips_v2$ride_length2 > 0 )
which(all_trips_v2$ride_length2 <= 0)
which(all_trips_v3$ride_length2 <= 0)
# Next, i combined all of my monthly data into one data frame
# We get a 786,420 x 7 dataframe that contains bike rental data from May 2022 to April 2023
# Everything except the day_of_week column is a character, will need to adjust columns to correct data types for analysis
all_trips <- bind_rows(a22_05, a22_06 ,a22_07 ,a22_08 ,a22_09 ,a22_10 ,a22_11, a22_12, a23_01, a23_02, a23_03, a23_04)
all_trips_v2 <- all_trips[!(all_trips$ride_length <= 0),]
which(is.na(all_trips_v2$ride_length)) # check there are no NAs
all_trips_v2$ride_length2 <- chron(times=all_trips_v2$ride_length) # this converts our ride_length data from character to time (numeric) so we can perform our calculations
which(is.na(all_trips_v2)) #check there are no NAs after converting data type
which(all_trips_v2$ride_length2 <= 0)
all_trips_v3 <- subset(all_trips_v2, all_trips_v2$ride_length2 > 0 )
str(all_trips_v2)
str(all_trips_v3)
colnames(all_trips_v3)
dim(all_trips_v3)
str(all_trips_v3)
colnames(all_trips_v3)
dim(all_trips_v3)
str(all_trips_v3)
#Next, we're going to want to move create individual columns for day, month, year, etc. (need to split date and time column)
all_trips_v3[c('date', 'time')] <- str_split_fixed(all_trips_v3$started_at, ' ', 2) # this separates date and time, now we can separate date
all_trips_v3$date <- as.Date(all_trips_v3$date, "%m/%d/%y") #convert character string to date data type
all_trips_v3$month <- format(as.Date(all_trips_v3$date), "%m")
all_trips_v3$day <- format(as.Date(all_trips_v3$date), "%d")
all_trips_v3$year <- format(as.Date(all_trips_v3$date), "%y")
str(all_trips_v3)
# Now that our data is all clean and processed, we can start calculating our summary statistics
summary(all_trips_v3$ride_length2) # avg ride time: 00:14:24
which(all_trips_v2$ride_length2 <= 0) # check if there are values less than or equal to 0
which(max(all_trips_v3$ride_length2))
max(all_trips_v3$ride_length2)
which(all_trips_v2$ride_length2 = 23:58:07) # check if there are values less than or equal to 0
which(all_trips_v2$ride_length2 == 23:58:07) # check if there are values less than or equal to 0
which(all_trips_v3$ride_length2 == 23:58:07) # check if there are values less than or equal to 0
# Now that our data is all clean and processed, we can start calculating our summary statistics
summary(all_trips_v3$ride_length2) # avg ride time: 00:14:24, median 09:00, max-
aggregate(all_trips_v3$ride_length2 ~ all_trips_v3$member_casual, FUN = mean)
aggregate(all_trips_v3$ride_length2 ~ all_trips_v3$member_casual, FUN = median)
aggregate(all_trips_v3$ride_length2 ~ all_trips_v3$member_casual, FUN = max)
aggregate(all_trips_v3$ride_length2 ~ all_trips_v3$member_casual, FUN = min)
