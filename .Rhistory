install.packages("skimr")
installed.packages()
install.packages("dplyr")
library(tidyverse)
library(lubridate)
library(ggplot2)
library(stringr)
library(chron)
a22_05 = read.csv("Clean_Data/202205-divvy-tripdata.csv")
a22_06 = read.csv("Clean_Data/202206-divvy-tripdata.csv")
a22_07 = read.csv("Clean_Data/202207-divvy-tripdata.csv")
a22_08 = read.csv("Clean_Data/202208-divvy-tripdata.csv")
a22_09 = read.csv("Clean_Data/202209-divvy-tripdata.csv")
a22_10 = read.csv("Clean_Data/202210-divvy-tripdata.csv")
a22_11 = read.csv("Clean_Data/202211-divvy-tripdata.csv")
a22_12 = read.csv("Clean_Data/202212-divvy-tripdata.csv")
a23_01 = read.csv("Clean_Data/202301-divvy-tripdata.csv")
a23_02 = read.csv("Clean_Data/202302-divvy-tripdata.csv")
a23_03 = read.csv("Clean_Data/202303-divvy-tripdata.csv")
a23_04 = read.csv("Clean_Data/202304-divvy-tripdata.csv")
library(tidyverse)
a22_05 = read.csv("Clean_Data/202205-divvy-tripdata.csv")
a22_06 = read.csv("Clean_Data/202206-divvy-tripdata.csv")
a22_07 = read.csv("Clean_Data/202207-divvy-tripdata.csv")
a22_08 = read.csv("Clean_Data/202208-divvy-tripdata.csv")
a22_09 = read.csv("Clean_Data/202209-divvy-tripdata.csv")
a22_10 = read.csv("Clean_Data/202210-divvy-tripdata.csv")
a22_11 = read.csv("Clean_Data/202211-divvy-tripdata.csv")
a22_12 = read.csv("Clean_Data/202212-divvy-tripdata.csv")
a23_01 = read.csv("Clean_Data/202301-divvy-tripdata.csv")
a23_02 = read.csv("Clean_Data/202302-divvy-tripdata.csv")
setwd("/Users/gianluca_astudillo/Documents/GitHub/R-Case-Study") # set my directory
library(tidyverse)
library(lubridate)
library(ggplot2)
library(stringr)
library(chron)
a22_05 = read.csv("Clean_Data/202205-divvy-tripdata.csv")
a22_06 = read.csv("Clean_Data/202206-divvy-tripdata.csv")
a22_07 = read.csv("Clean_Data/202207-divvy-tripdata.csv")
a22_08 = read.csv("Clean_Data/202208-divvy-tripdata.csv")
a22_09 = read.csv("Clean_Data/202209-divvy-tripdata.csv")
a22_10 = read.csv("Clean_Data/202210-divvy-tripdata.csv")
a22_11 = read.csv("Clean_Data/202211-divvy-tripdata.csv")
a22_12 = read.csv("Clean_Data/202212-divvy-tripdata.csv")
a23_01 = read.csv("Clean_Data/202301-divvy-tripdata.csv")
a23_02 = read.csv("Clean_Data/202302-divvy-tripdata.csv")
a23_03 = read.csv("Clean_Data/202303-divvy-tripdata.csv")
a23_04 = read.csv("Clean_Data/202304-divvy-tripdata.csv")
# Next, i combined all of my monthly data into one data frame
# We get a 786,420 x 7 dataframe that contains bike rental data from May 2022 to April 2023
# Everything except the day_of_week column is a character, will need to adjust columns to correct data types for analysis
all_trips <- bind_rows(a22_05, a22_06 ,a22_07 ,a22_08 ,a22_09 ,a22_10 ,a22_11, a22_12, a23_01, a23_02, a23_03, a23_04)
all_trips_v2 <- all_trips[!(all_trips$ride_length <= 0),]
which(is.na(all_trips_v2$ride_length)) # check there are no NAs
all_trips_v2$ride_length2 <- chron(times=all_trips_v2$ride_length) # this converts our ride_length data from character to time (numeric) so we can perform our calculations
which(is.na(all_trips_v2)) #check there are no NAs after converting data type
which(all_trips_v2$ride_length2 <= 0) # check if there are values less than or equal to 0
all_trips_v3 <- subset(all_trips_v2, all_trips_v2$ride_length2 > 0 )
which(all_trips_32$ride_length2 <= 0) # check if there are values less than or equal to 0
which(all_trips_3$ride_length2 <= 0) # check if there are values less than or equal to 0
which(all_trips_v3$ride_length2 <= 0) # check if there are values less than or equal to 0
colnames(all_trips_v3)
dim(all_trips_v3)
str(all_trips_v3)
# only two types of user (member or casual); three types of bikes (classic, docked, and electric)
unique(all_trips_v3$member_casual)
unique(all_trips$_v3rideable_type)
unique(all_trips$_v3$rideable_type)
unique(all_trips_v3$rideable_type)
#Next, we're going to want to move create individual columns for day, month, year, etc. (need to split date and time column)
all_trips_v3[c('date', 'time')] <- str_split_fixed(all_trips_v3$started_at, ' ', 2) # this separates date and time, now we can separate date
#Next, we're going to want to move create individual columns for day, month, year, etc. (need to split date and time column)
all_trips_v3[c('date', 'time')] <- str_split_fixed(all_trips_v3$started_at, ' ', 2) # this separates date and time, now we can separate date
all_trips_v3$date <- as.Date(all_trips_v3$date, "%m/%d/%y") #convert character string to date data type
all_trips_v3$month <- format(as.Date(all_trips_v3$date), "%m")
View(all_trips_v3)
all_trips_v3 <- subset(all_trips_v2, all_trips_v2$ride_length2 > 0 )
#Next, we're going to want to move create individual columns for day, month, year, etc. (need to split date and time column)
all_trips_v3[c('date', 'time')] <- str_split_fixed(all_trips_v3$started_at, ' ', 2) # this separates date and time, now we can separate date
View(all_trips_v3)
all_trips_v3$date <- as.Date(all_trips_v3$date, "%m/%d/%y") #convert character string to date data type
all_trips_v3$month <- format(as.Date(all_trips_v3$date), "%m")
all_trips_v3$day <- format(as.Date(all_trips_v3$date), "%d")
all_trips_v3$year <- format(as.Date(all_trips_v3$date), "%y")
str(all_trips_v3)
# Now that our data is all clean and processed, we can start analyzing
summary(all_trips_v3$ride_length2) # avg ride time: 00:14:24, median 09:00, max- 23:58:07, min- 00:01
aggregate(all_trips_v3$ride_length2 ~ all_trips_v3$member_casual, FUN = mean)
aggregate(all_trips_v3$ride_length2 ~ all_trips_v3$member_casual, FUN = median)
aggregate(all_trips_v3$ride_length2 ~ all_trips_v3$member_casual, FUN = max)
aggregate(all_trips_v3$ride_length2 ~ all_trips_v3$member_casual, FUN = min)
aggregate(all_trips_v3$ride_length2 ~ all_trips_v3$member_casual, FUN = mean)
aggregate(all_trips_v3$ride_length2 ~ all_trips_v3$member_casual, FUN = median) #
aggregate(all_trips_v3$ride_length2 ~ all_trips_v3$member_casual, FUN = max) # causal max:
# Now that our data is all clean and processed, we can start analyzing
summary(all_trips_v3$ride_length2) # avg ride time: 00:14:24, median 09:00, max- 23:58:07, min- 00:01
which(all_trips_v3$ride_length2 == 23:58:07) # check if there are values less than or equal to 0
which(all_trips_v3$ride_length2 == '23:58:07') # check if there are values less than or equal to 0
all_trips_v3[639181]
all_trips_v3[639181,]
aggregate(all_trips_v3$ride_length2 ~ all_trips_v3$member_casual, FUN = max) # causal max:
aggregate(all_trips_v3$ride_length2 ~ all_trips_v3$member_casual, FUN = min) #
which(all_trips_v3$ride_length2 == '00:00:01') # check if there are values less than or equal to 0
all_trips_v3[1780,]
which(all_trips_v3$ride_length2 == '00:00:02') # check if there are values less than or equal to 0
aggregate(all_trips_v2$ride_length ~ all_trips_v2$member_casual + all_trips_v2$day_of_week, FUN = mean)
warnings()
aggregate(all_trips_v3$ride_length2 ~ all_trips_v3$member_casual + all_trips_v3$day_of_week, FUN = mean)
all_trips_v3$day_of_week <- ordered(all_trips_v3$day_of_week, levels=c("Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"))
all_trips_v3 <- subset(all_trips_v2, all_trips_v2$ride_length2 > 0 )
#Next, we're going to want to move create individual columns for day, month, year, etc. (need to split date and time column)
all_trips_v3[c('date', 'time')] <- str_split_fixed(all_trips_v3$started_at, ' ', 2) # this separates date and time, now we can separate date
all_trips_v3$date <- as.Date(all_trips_v3$date, "%m/%d/%y") #convert character string to date data type
all_trips_v3$month <- format(as.Date(all_trips_v3$date), "%m")
all_trips_v3$day <- format(as.Date(all_trips_v3$date), "%d")
all_trips_v3$year <- format(as.Date(all_trips_v3$date), "%y")
all_trips_v3 <-  all_trips_v3 %>%
mutate(day_of_week = recode(day_of_week
, "1" = "Sunday"
, "2" = "Monday"
, "3" = "Tuesday"
, "4" = "Wednesday"
, "5" = "Thursday"
, "6" = "Friday"
, "7" = "Saturday"))
all_trips_v3$day_of_week <- ordered(all_trips_v3$day_of_week, levels=c("Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"))
all_trips_v3$day_of_week <- ordered(all_trips_v3$day_of_week, levels=c("Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"))
aggregate(all_trips_v3$ride_length2 ~ all_trips_v3$member_casual + all_trips_v3$day_of_week, FUN = mean)
all_trips_v3$day_of_week <- ordered(all_trips_v3$day_of_week, levels=c("Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"))
all_trips_v3$day_of_week <- ordered(all_trips_v3$day_of_week, levels= "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday")
all_trips_v3$day_of_week <- ordered(all_trips_v3$day_of_week, levels= c("Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"))
str(all_trips_v3)
aggregate(all_trips_v3$ride_length2 ~ all_trips_v3$member_casual + all_trips_v3$day_of_week, FUN = mean)
# Now, we're going to analyze ridership data by type and weekday
all_trips_v3 %>%
mutate(weekday = wday(started_at, label = TRUE))
# Now, we're going to analyze ridership data by type and weekday
all_trips_v3 %>%
mutate(weekday = wday(started_at, label = TRUE)) %>%
wday
# Now, we're going to analyze ridership data by type and weekday
all_trips_v3 %>%
mutate(weekday = wday(started_at, label = TRUE)) %>%
wday()
# Now, we're going to analyze ridership data by type and weekday
all_trips_v3 %>%
group_by(member_casual, day_of_week) %>%
summarize(number_of_rides= n())
# Now, we're going to analyze ridership data by type and weekday
all_trips_v3 %>%
group_by(member_casual, day_of_week) %>%
summarize(number_of_rides= n()
,average_duration = mean(ride_length2)) %>%
arrange(member_casual, day_of_week)
# Next, we're going to visualize the table created above
all_trips_v3 %>%
group_by(member_casual, day_of_week) %>%
summarize(number_of_rides= n() # gives total number of rides by day
,average_duration = mean(ride_length2)) %>%
arrange(member_casual, day_of_week) # gives us average duration of ride by day
ggplot(aes(x = day_of_week, y = number_of_rides, fill = member_casual)) + geom_col(position = "dodge")
# Next, we're going to visualize the table created above
all_trips_v3 %>%
group_by(member_casual, day_of_week) %>%
summarize(number_of_rides= n() # gives total number of rides by day
,average_duration = mean(ride_length2)) %>%
arrange(member_casual, day_of_week) %>% # gives us average duration of ride by day
ggplot(aes(x = day_of_week, y = number_of_rides, fill = member_casual))
# Next, we're going to visualize the table created above
all_trips_v3 %>%
group_by(member_casual, day_of_week) %>%
summarize(number_of_rides= n() # gives total number of rides by day
,average_duration = mean(ride_length2)) %>%
arrange(member_casual, day_of_week) %>% # gives us average duration of ride by day
ggplot(aes(x = day_of_week, y = number_of_rides, fill = member_casual))
# Next, we're going to visualize the table created above
all_trips_v3 %>%
group_by(member_casual, day_of_week) %>%
summarize(number_of_rides= n() # gives total number of rides by day
,average_duration = mean(ride_length2)) %>%
arrange(member_casual, day_of_week) %>% # gives us average duration of ride by day
ggplot(aes(x = day_of_week, y = number_of_rides, fill = member_casual)) +
geom_col()
# Next, we're going to visualize the table created above
all_trips_v3 %>%
group_by(member_casual, day_of_week) %>%
summarize(number_of_rides= n() # gives total number of rides by day
,average_duration = mean(ride_length2)) %>%
arrange(member_casual, day_of_week) %>% # gives us average duration of ride by day
ggplot(aes(x = day_of_week, y = number_of_rides, fill = member_casual)) +
geom_col(position = "dodge")
# Next, we're going to visualize the average duration
all_trips_v3 %>%
group_by(member_casual, day_of_week) %>%
summarize(number_of_rides= n() # gives total number of rides by day
,average_duration = mean(ride_length2)) %>%
arrange(member_casual, day_of_week) %>% # gives us average duration of ride by day
ggplot(aes(x = day_of_week, y = average_duration, fill = member_casual)) +
geom_col(position = "dodge") # gives us a column chart separating the two member groups; remove dodge so they are in the same position
# Next, we're going to visualize the number of rides by the rider type (casual or member)
all_trips_v3 %>%
group_by(member_casual, day_of_week) %>%
summarize(number_of_rides= n() # gives total number of rides by day
,average_duration = mean(ride_length2)) %>%
arrange(member_casual, day_of_week) %>% # gives us average duration of ride by day
ggplot(aes(x = day_of_week, y = number_of_rides, fill = member_casual)) +
geom_col(position = "dodge") # gives us a column chart separating the two member groups; remove dodge so they are in the same position
# Next, we're going to visualize the average duration
all_trips_v3 %>%
group_by(member_casual, day_of_week) %>%
summarize(number_of_rides= n() # gives total number of rides by day
,average_duration = mean(ride_length2)) %>%
arrange(member_casual, day_of_week) %>% # gives us average duration of ride by day
ggplot(aes(x = day_of_week, y = average_duration, fill = member_casual)) +
geom_col(position = "dodge") # gives us a column chart separating the two member groups; remove dodge so they are in the same position
# Now, we're going to analyze ridership data by type and weekday
all_trips_v3 %>%
group_by(member_casual, day_of_week) %>%
summarize(number_of_rides= n() # gives total number of rides by day
,average_duration = mean(ride_length2)) %>%
arrange(member_casual, day_of_week) # gives us average duration of ride by day
# Next, we're going to visualize the average duration
all_trips_v3 %>%
group_by(member_casual, day_of_week) %>%
summarize(number_of_rides= n() # gives total number of rides by day
,average_duration = mean(ride_length2)) %>%
arrange(member_casual, day_of_week) %>% # gives us average duration of ride by day
ggplot(aes(x = day_of_week, y = as.time(average_duration), fill = member_casual)) +
geom_col(position = "dodge") # gives us a column chart separating the two member groups; remove dodge so they are in the same position
# Next, we're going to visualize the average duration
all_trips_v3 %>%
group_by(member_casual, day_of_week) %>%
summarize(number_of_rides= n() # gives total number of rides by day
,average_duration = mean(ride_length2)) %>%
arrange(member_casual, day_of_week) %>% # gives us average duration of ride by day
ggplot(aes(x = day_of_week, y = average_duration, fill = member_casual)) +
geom_col(position = "dodge") # gives us a column chart separating the two member groups; remove dodge so they are in the same position
# Next, we're going to visualize the average duration
all_trips_v3 %>%
group_by(member_casual, day_of_week) %>%
summarize(number_of_rides= n() # gives total number of rides by day
,average_duration = mean(ride_length2)) %>%
arrange(member_casual, day_of_week) %>% # gives us average duration of ride by day
ggplot(aes(x = day_of_week, y = average_duration, fill = member_casual)) +
geom_col(position = "dodge") + # gives us a column chart separating the two member groups; remove dodge so they are in the same position
scale_y_time()
# Next, we're going to visualize the average duration
all_trips_v3 %>%
group_by(member_casual, day_of_week) %>%
summarize(number_of_rides= n() # gives total number of rides by day
,average_duration = mean(ride_length2)) %>%
arrange(member_casual, day_of_week) %>% # gives us average duration of ride by day
ggplot(aes(x = day_of_week, y = average_duration, fill = member_casual)) +
geom_col(position = "dodge") + # gives us a column chart separating the two member groups; remove dodge so they are in the same position
# Next, we're going to visualize the average duration
all_trips_v3 %>%
group_by(member_casual, day_of_week) %>%
summarize(number_of_rides= n() # gives total number of rides by day
,average_duration = mean(ride_length2)) %>%
arrange(member_casual, day_of_week) %>% # gives us average duration of ride by day
ggplot(aes(x = day_of_week, y = average_duration, fill = member_casual)) +
geom_col(position = "dodge") # gives us a column chart separating the two member groups; remove dodge so they are in the same position
# Next, we're going to visualize the number of rides by the rider type (casual or member)
all_trips_v3 %>%
group_by(member_casual, day_of_week) %>%
summarize(number_of_rides= n() # gives total number of rides by day
,average_duration = mean(ride_length2)) %>%
arrange(member_casual, day_of_week) %>% # gives us average duration of ride by day
ggplot(aes(x = day_of_week, y = number_of_rides, fill = member_casual)) +
geom_col(position = "dodge") # gives us a column chart separating the two member groups; remove dodge so they are in the same position
# Next, we're going to visualize the average duration
all_trips_v3 %>%
group_by(member_casual, day_of_week) %>%
summarize(number_of_rides= n() # gives total number of rides by day
,average_duration = mean(ride_length2)) %>%
arrange(member_casual, day_of_week) %>% # gives us average duration of ride by day
ggplot(aes(x = day_of_week, y = average_duration, fill = member_casual)) +
geom_col(position = "dodge") # gives us a column chart separating the two member groups; remove dodge so they are in the same position
# Next, we're going to visualize the average duration
all_trips_v3 %>%
group_by(member_casual, day_of_week) %>%
summarize(number_of_rides= n() # gives total number of rides by day
,average_duration = mean(ride_length2)) %>%
arrange(member_casual, day_of_week) %>% # gives us average duration of ride by day
ggplot(aes(x = day_of_week, y = average_duration, fill = member_casual)) +
geom_col(position = "dodge") + # gives us a column chart separating the two member groups; remove dodge so they are in the same position
scale_y_time(date_labels = "%H:%M:%S")
# Next, we're going to visualize the average duration
all_trips_v3 %>%
group_by(member_casual, day_of_week) %>%
summarize(number_of_rides= n() # gives total number of rides by day
,average_duration = mean(ride_length2)) %>%
arrange(member_casual, day_of_week) %>% # gives us average duration of ride by day
ggplot(aes(x = day_of_week, y = average_duration, fill = member_casual)) +
geom_col(position = "dodge") + # gives us a column chart separating the two member groups; remove dodge so they are in the same position
scale_y_time(date_labels = "%H %M %S")
# Next, we're going to visualize the average duration
all_trips_v3 %>%
group_by(member_casual, day_of_week) %>%
summarize(number_of_rides= n() # gives total number of rides by day
,average_duration = mean(ride_length2)) %>%
arrange(member_casual, day_of_week) %>% # gives us average duration of ride by day
ggplot(aes(x = day_of_week, y = average_duration, fill = member_casual)) +
geom_col(position = "dodge") + # gives us a column chart separating the two member groups; remove dodge so they are in the same position
scale_y_time(time_labels = "%H %M %S")
# Next, we're going to visualize the average duration
all_trips_v3 %>%
group_by(member_casual, day_of_week) %>%
summarize(number_of_rides= n() # gives total number of rides by day
,average_duration = mean(ride_length2)) %>%
arrange(member_casual, day_of_week) %>% # gives us average duration of ride by day
ggplot(aes(x = day_of_week, y = average_duration, fill = member_casual)) +
geom_col(position = "dodge") + # gives us a column chart separating the two member groups; remove dodge so they are in the same position
scale_y_time(date_labels = as.character("%H:%M:%S"))
# Next, we're going to visualize the average duration
all_trips_v3 %>%
group_by(member_casual, day_of_week) %>%
summarize(number_of_rides= n() # gives total number of rides by day
,average_duration = mean(ride_length2)) %>%
arrange(member_casual, day_of_week) %>% # gives us average duration of ride by day
ggplot(aes(x = day_of_week, y = average_duration, fill = member_casual)) +
geom_col(position = "dodge") + # gives us a column chart separating the two member groups; remove dodge so they are in the same position
scale_y_time(date_labels = as.character("%H:%M:%S"))
# Next, we're going to visualize the number of rides by the rider type (casual or member)
all_trips_v3 %>%
group_by(member_casual, day_of_week) %>%
summarize(number_of_rides= n() # gives total number of rides by day
,average_duration = mean(ride_length2)) %>%
arrange(member_casual, day_of_week) %>% # gives us average duration of ride by day
ggplot(aes(x = day_of_week, y = number_of_rides, fill = member_casual)) +
geom_col(position = "dodge") # gives us a column chart separating the two member groups; remove dodge so they are in the same position
# Next, we're going to visualize the average duration
all_trips_v3 %>%
group_by(member_casual, day_of_week) %>%
summarize(number_of_rides= n() # gives total number of rides by day
,average_duration = mean(ride_length2)) %>%
arrange(member_casual, day_of_week) %>% # gives us average duration of ride by day
ggplot(aes(x = day_of_week, y = average_duration, fill = member_casual)) +
geom_col(position = "dodge") + # gives us a column chart separating the two member groups; remove dodge so they are in the same position
scale_y_time(date_labels = as.character("%H:%M:%S"))
# Next, we're going to visualize the average duration
all_trips_v3 %>%
group_by(member_casual, day_of_week) %>%
summarize(number_of_rides= n() # gives total number of rides by day
,average_duration = mean(ride_length2)) %>%
arrange(member_casual, day_of_week) %>% # gives us average duration of ride by day
ggplot(aes(x = day_of_week, y = average_duration, fill = member_casual)) +
geom_col(position = "dodge") + # gives us a column chart separating the two member groups; remove dodge so they are in the same position
scale_y_time(date_labels = as.character("%H%M%S"))
# Next, we're going to visualize the average duration
all_trips_v3 %>%
group_by(member_casual, day_of_week) %>%
summarize(number_of_rides= n() # gives total number of rides by day
,average_duration = mean(ride_length2)) %>%
arrange(member_casual, day_of_week) %>% # gives us average duration of ride by day
ggplot(aes(x = day_of_week, y = average_duration, fill = member_casual)) +
geom_col(position = "dodge") + # gives us a column chart separating the two member groups; remove dodge so they are in the same position
scale_y_time(date_labels = as.character("/%H/%M/%S"))
# Next, we're going to visualize the average duration
all_trips_v3 %>%
group_by(member_casual, day_of_week) %>%
summarize(number_of_rides= n() # gives total number of rides by day
,average_duration = mean(ride_length2)) %>%
arrange(member_casual, day_of_week) %>% # gives us average duration of ride by day
ggplot(aes(x = day_of_week, y = average_duration, fill = member_casual)) +
geom_col(position = "dodge") + # gives us a column chart separating the two member groups; remove dodge so they are in the same position
scale_y_time(date_labels = as.character("%H:%M:%S"))
# Next, we're going to visualize the average duration
all_trips_v3 %>%
group_by(member_casual, day_of_week) %>%
summarize(number_of_rides= n() # gives total number of rides by day
,average_duration = mean(ride_length2)) %>%
arrange(member_casual, day_of_week) %>% # gives us average duration of ride by day
ggplot(aes(x = day_of_week, y = average_duration, fill = member_casual)) +
geom_col(position = "dodge") + # gives us a column chart separating the two member groups; remove dodge so they are in the same position
scale_y_time(date_labels = as.character(y))
# Next, we're going to visualize the average duration
all_trips_v3 %>%
group_by(member_casual, day_of_week) %>%
summarize(number_of_rides= n() # gives total number of rides by day
,average_duration = mean(ride_length2)) %>%
arrange(member_casual, day_of_week) %>% # gives us average duration of ride by day
ggplot(aes(x = day_of_week, y = average_duration, fill = member_casual)) +
geom_col(position = "dodge") + # gives us a column chart separating the two member groups; remove dodge so they are in the same position
scale_y_time(date_labels = format(as.character("%H:%M:%S")))
# Next, we're going to visualize the average duration
all_trips_v3 %>%
group_by(member_casual, day_of_week) %>%
summarize(number_of_rides= n() # gives total number of rides by day
,average_duration = mean(ride_length2)) %>%
arrange(member_casual, day_of_week) %>% # gives us average duration of ride by day
ggplot(aes(x = day_of_week, y = average_duration, fill = member_casual)) +
geom_col(position = "dodge") + # gives us a column chart separating the two member groups; remove dodge so they are in the same position
scale_y_time(date_labels = "%H:$M:%S")
# Next, we're going to visualize the average duration
all_trips_v3 %>%
group_by(member_casual, day_of_week) %>%
summarize(number_of_rides= n() # gives total number of rides by day
,average_duration = mean(ride_length2)) %>%
arrange(member_casual, day_of_week) %>% # gives us average duration of ride by day
ggplot(aes(x = day_of_week, y = average_duration, fill = member_casual)) +
geom_col(position = "dodge") + # gives us a column chart separating the two member groups; remove dodge so they are in the same position
scale_y_time()
# Now, we're going to analyze ridership data by type and weekday
all_trips_v3 %>%
group_by(member_casual, day_of_week) %>%
summarize(number_of_rides= n() # gives total number of rides by day
,average_duration = mean(ride_length2)) %>%
arrange(member_casual, day_of_week) # gives us average duration of ride by day
# Next, we're going to visualize the average duration
all_trips_v3 %>%
group_by(member_casual, day_of_week) %>%
summarize(number_of_rides= n() # gives total number of rides by day
,average_duration = mean(ride_length2)) %>%
arrange(member_casual, day_of_week) %>% # gives us average duration of ride by day
ggplot(aes(x = day_of_week, y = average_duration, fill = member_casual)) +
geom_col(position = "dodge") + # gives us a column chart separating the two member groups; remove dodge so they are in the same position
scale_y_time(date_labels = "%T")
# Next, we're going to visualize the average duration
all_trips_v3 %>%
group_by(member_casual, day_of_week) %>%
summarize(number_of_rides= n() # gives total number of rides by day
,average_duration = mean(ride_length2)) %>%
arrange(member_casual, day_of_week) %>% # gives us average duration of ride by day
ggplot(aes(x = day_of_week, y = average_duration, fill = member_casual)) +
geom_col(position = "dodge") + # gives us a column chart separating the two member groups; remove dodge so they are in the same position
scale_y_time(labels = "%T")
# Next, we're going to visualize the number of rides by the rider type (casual or member)
all_trips_v3 %>%
group_by(member_casual, day_of_week) %>%
summarize(number_of_rides= n() # gives total number of rides by day
,average_duration = mean(ride_length2)) %>%
arrange(member_casual, day_of_week) %>% # gives us average duration of ride by day
ggplot(aes(x = day_of_week, y = number_of_rides, fill = member_casual)) +
geom_col(position = "dodge") # gives us a column chart separating the two member groups; remove dodge so they are in the same position
# Next, we're going to visualize the average duration
all_trips_v3 %>%
group_by(member_casual, day_of_week) %>%
summarize(number_of_rides= n() # gives total number of rides by day
,average_duration = mean(ride_length2)) %>%
arrange(member_casual, day_of_week) %>% # gives us average duration of ride by day
ggplot(aes(x = day_of_week, y = average_duration, fill = member_casual)) +
geom_col(position = "dodge") + # gives us a column chart separating the two member groups; remove dodge so they are in the same position
scale_y_time(labels = "%T")
# Next, we're going to visualize the average duration
all_trips_v3 %>%
group_by(member_casual, day_of_week) %>%
summarize(number_of_rides= n() # gives total number of rides by day
,average_duration = mean(ride_length2)) %>%
arrange(member_casual, day_of_week) %>% # gives us average duration of ride by day
ggplot(aes(x = day_of_week, y = average_duration, fill = member_casual)) +
geom_col(position = "dodge") + # gives us a column chart separating the two member groups; remove dodge so they are in the same position
scale_y_time(date_labels = "%T")
# Next, we're going to visualize the average duration
all_trips_v3 %>%
group_by(member_casual, day_of_week) %>%
summarize(number_of_rides= n() # gives total number of rides by day
,average_duration = mean(ride_length2)) %>%
arrange(member_casual, day_of_week) %>% # gives us average duration of ride by day
ggplot(aes(x = day_of_week, y = average_duration, fill = member_casual)) +
geom_col(position = "dodge") + # gives us a column chart separating the two member groups; remove dodge so they are in the same position
scale_y_time("%T")
# Next, we're going to visualize the number of rides by the rider type (casual or member)
all_trips_v3 %>%
group_by(member_casual, day_of_week) %>%
summarize(number_of_rides= n() # gives total number of rides by day
,average_duration = mean(ride_length2)) %>%
arrange(member_casual, day_of_week) %>% # gives us average duration of ride by day
ggplot(aes(x = day_of_week, y = number_of_rides, fill = member_casual)) +
geom_col(position = "dodge") # gives us a column chart separating the two member groups; remove dodge so they are in the same position
# Next, we're going to visualize the average duration
all_trips_v3 %>%
group_by(member_casual, day_of_week) %>%
summarize(number_of_rides= n() # gives total number of rides by day
,average_duration = mean(ride_length2)) %>%
arrange(member_casual, day_of_week) %>% # gives us average duration of ride by day
ggplot(aes(x = day_of_week, y = average_duration, fill = member_casual)) +
geom_col(position = "dodge") + # gives us a column chart separating the two member groups; remove dodge so they are in the same position
scale_y_time("%T")
# Next, we're going to visualize the average duration
all_trips_v3 %>%
group_by(member_casual, day_of_week) %>%
summarize(number_of_rides= n() # gives total number of rides by day
,average_duration = mean(ride_length2)) %>%
arrange(member_casual, day_of_week) %>% # gives us average duration of ride by day
ggplot(aes(x = day_of_week, y = average_duration, fill = member_casual)) +
geom_col(position = "dodge") + # gives us a column chart separating the two member groups; remove dodge so they are in the same position
# Next, we're going to visualize the number of rides by the rider type (casual or member)
all_trips_v3 %>%
group_by(member_casual, day_of_week) %>%
summarize(number_of_rides= n() # gives total number of rides by day
,average_duration = mean(ride_length2)) %>%
arrange(member_casual, day_of_week) %>% # gives us average duration of ride by day
ggplot(aes(x = day_of_week, y = number_of_rides, fill = member_casual)) +
geom_col(position = "dodge") # gives us a column chart separating the two member groups; remove dodge so they are in the same position
# Next, we're going to visualize the number of rides by the rider type (casual or member)
all_trips_v3 %>%
group_by(member_casual, day_of_week) %>%
summarize(number_of_rides= n() # gives total number of rides by day
,average_duration = mean(ride_length2)) %>%
arrange(member_casual, day_of_week) %>% # gives us average duration of ride by day
ggplot(aes(x = day_of_week, y = number_of_rides, fill = member_casual)) +
geom_col(position = "dodge") # gives us a column chart separating the two member groups; remove dodge so they are in the same position
# Next, we're going to visualize the average duration
all_trips_v3 %>%
group_by(member_casual, day_of_week) %>%
summarize(number_of_rides= n() # gives total number of rides by day
,average_duration = mean(ride_length2)) %>%
arrange(member_casual, day_of_week) %>% # gives us average duration of ride by day
ggplot(aes(x = day_of_week, y = average_duration, fill = member_casual)) +
geom_col(position = "dodge") # gives us a column chart separating the two member groups; remove dodge so they are in the same position
